version: '3.9'

services:
  # Development environment
  nodejs-backend-dev:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      NODE_ENV: "development"
      TZ: "Europe/Berlin"
      MONGODB_URL: "mongodb://mongodb:27017/nodejs-backend-starter"
    command: npm run dev
    depends_on:
      - mongodb
    networks:
      - backend-network

  # Production environment
  nodejs-backend-prod:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      NODE_ENV: "production"
      TZ: "Europe/Berlin"
      MONGODB_URL: "mongodb://mongodb:27017/nodejs-backend-starter"
    command: npm start
    depends_on:
      - mongodb
    networks:
      - backend-network
    restart: unless-stopped

  # MongoDB database
  mongodb:
    image: mongo:7.0
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: nodejs-backend-starter
    volumes:
      - mongodb_data:/data/db
    networks:
      - backend-network
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend-network
    restart: unless-stopped

volumes:
  mongodb_data:
  redis_data:

networks:
  backend-network:
    driver: bridge
